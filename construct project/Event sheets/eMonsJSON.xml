<?xml version="1.0" encoding="utf-8" ?>
<c2eventsheet>
    <!--All the 'name' attributes are ignored by Construct 2 - they are there for readability only.-->
    <name>eMonsJSON</name>
    <events>
        <include>eDexJSON</include>
        <event-block sid="829660197311430">
            <conditions>
                <condition id="-2" name="On start of layout" sid="191946209392694" type="System" />
            </conditions>
            <actions>
                <action id="60" name="LoadJSON" sid="511571762087564" type="3monsJSON">
                    <param id="0" name="JSON">&quot;{&quot;&quot;mons&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;Pikachu&quot;&quot;,&quot;&quot;duration&quot;&quot;:15,&quot;&quot;gift&quot;&quot;:10,&quot;&quot;nb&quot;&quot;:1,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;,&quot;&quot;description&quot;&quot;:&quot;&quot;bla bla&quot;&quot;,&quot;&quot;captureProbability&quot;&quot;:0.5},{&quot;&quot;name&quot;&quot;:&quot;&quot;Togepi&quot;&quot;,&quot;&quot;duration&quot;&quot;:15,&quot;&quot;gift&quot;&quot;:1,&quot;&quot;nb&quot;&quot;:2,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;,&quot;&quot;description&quot;&quot;:&quot;&quot;bla bla&quot;&quot;,&quot;&quot;captureProbability&quot;&quot;:0.2},{&quot;&quot;name&quot;&quot;:&quot;&quot;Squirtle&quot;&quot;,&quot;&quot;duration&quot;&quot;:1,&quot;&quot;gift&quot;&quot;:100,&quot;&quot;nb&quot;&quot;:3,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;,&quot;&quot;description&quot;&quot;:&quot;&quot;bla bla&quot;&quot;,&quot;&quot;captureProbability&quot;&quot;:0.2},{&quot;&quot;name&quot;&quot;:&quot;&quot;Miho&quot;&quot;,&quot;&quot;duration&quot;&quot;:2,&quot;&quot;gift&quot;&quot;:50,&quot;&quot;nb&quot;&quot;:4,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;,&quot;&quot;description&quot;&quot;:&quot;&quot;bla bla&quot;&quot;,&quot;&quot;captureProbability&quot;&quot;:0.1},{&quot;&quot;name&quot;&quot;:&quot;&quot;Slime&quot;&quot;,&quot;&quot;duration&quot;&quot;:100,&quot;&quot;gift&quot;&quot;:2,&quot;&quot;nb&quot;&quot;:5,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;,&quot;&quot;description&quot;&quot;:&quot;&quot;bla bla&quot;&quot;,&quot;&quot;captureProbability&quot;&quot;:0.9},{&quot;&quot;name&quot;&quot;:&quot;&quot;Rarimon&quot;&quot;,&quot;&quot;duration&quot;&quot;:100,&quot;&quot;gift&quot;&quot;:2,&quot;&quot;nb&quot;&quot;:6,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;,&quot;&quot;description&quot;&quot;:&quot;&quot;bla bla&quot;&quot;,&quot;&quot;captureProbability&quot;&quot;:0.1},{&quot;&quot;name&quot;&quot;:&quot;&quot;Gros Tas&quot;&quot;,&quot;&quot;duration&quot;&quot;:100,&quot;&quot;gift&quot;&quot;:2,&quot;&quot;nb&quot;&quot;:7,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;,&quot;&quot;description&quot;&quot;:&quot;&quot;bla bla&quot;&quot;,&quot;&quot;captureProbability&quot;&quot;:0.5}],&quot;&quot;bait&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;free&quot;&quot;,&quot;&quot;cost&quot;&quot;:0,&quot;&quot;duration&quot;&quot;:15,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;},{&quot;&quot;name&quot;&quot;:&quot;&quot;cheap&quot;&quot;,&quot;&quot;cost&quot;&quot;:1,&quot;&quot;duration&quot;&quot;:30,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;},{&quot;&quot;name&quot;&quot;:&quot;&quot;normal&quot;&quot;,&quot;&quot;cost&quot;&quot;:10,&quot;&quot;duration&quot;&quot;:60,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;},{&quot;&quot;name&quot;&quot;:&quot;&quot;fancy&quot;&quot;,&quot;&quot;cost&quot;&quot;:100,&quot;&quot;duration&quot;&quot;:180,&quot;&quot;visual&quot;&quot;:&quot;&quot;?&quot;&quot;}],&quot;&quot;regions&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;the first region&quot;&quot;,&quot;&quot;probability&quot;&quot;:{&quot;&quot;common&quot;&quot;:20,&quot;&quot;uncommon&quot;&quot;:10,&quot;&quot;rare&quot;&quot;:2,&quot;&quot;nothing&quot;&quot;:20},&quot;&quot;common&quot;&quot;:[0,1],&quot;&quot;uncommon&quot;&quot;:[2,3],&quot;&quot;rare&quot;&quot;:[4,5]},{&quot;&quot;name&quot;&quot;:&quot;&quot;the second region&quot;&quot;,&quot;&quot;probability&quot;&quot;:{&quot;&quot;common&quot;&quot;:1,&quot;&quot;uncommon&quot;&quot;:1,&quot;&quot;rare&quot;&quot;:1,&quot;&quot;nothing&quot;&quot;:10},&quot;&quot;common&quot;&quot;:[6],&quot;&quot;uncommon&quot;&quot;:[6],&quot;&quot;rare&quot;&quot;:[6]}]}&quot;</param>
                    <param id="1" name="Reference point">0</param>
                    <param id="2" name="Key {n}"></param>
                </action>
                <action id="0" name="Call function" sid="826040995899944" type="Function">
                    <param id="0" name="Name">&quot;dex .initiateDex&quot;</param>
                    <param id="1" name="Parameter {n}"></param>
                </action>
                <action id="-13" name="Set boolean" sid="349819409093164" type="3monsJSON">
                    <param id="0" name="Instance variable">fullyLoaded</param>
                    <param id="1" name="Value">1</param>
                </action>
            </actions>
        </event-block>
        <event-group description="" sid="559641465357570" title="AJAX request (mons.json)">
            <sub-events>
                <comment>Request the json once per day (it also triggers on the first start, for a New Game)</comment>
                <event-block disabled="1" sid="353587388221620">
                    <conditions>
                        <condition id="1" name="Is online" sid="358585779743503" type="Browser" />
                        <condition id="-7" inverted="1" name="Compare instance variable" sid="778920771613644" type="3monsJSON">
                            <param id="0" name="Instance variable">date</param>
                            <param id="1" name="Comparison">0</param>
                            <param id="2" name="Value">date.Date</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="1" name="Request project file" sid="179850598389900" type="AJAX">
                            <param id="0" name="Tag">&quot;mons.json&quot;</param>
                            <param id="1" name="File">mons.json</param>
                        </action>
                        <action id="-10" name="Set value" sid="360854307410305" type="3monsJSON">
                            <param id="0" name="Instance variable">date</param>
                            <param id="1" name="Value">Date.Date</param>
                        </action>
                    </actions>
                </event-block>
                <comment>if the internet was down the first time you launched the game and the array is still empty, this will make sure you&apos;re quickly back on track by trying every 15 sec</comment>
                <event-block disabled="1" sid="106672379521351">
                    <conditions>
                        <condition id="70" name="Is Empty" sid="708085315007437" type="3monsJSON">
                            <param id="0" name="Reference point">0</param>
                            <param id="1" name="Key {n}"></param>
                        </condition>
                        <condition id="1" name="Is online" sid="262633634586110" type="Browser" />
                        <condition id="-6" name="Every X seconds" sid="483984020912747" type="System">
                            <param id="0" name="Interval (seconds)">15</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="14" name="Log" sid="924001208575954" type="Browser">
                            <param id="0" name="Type">0</param>
                            <param id="1" name="Message">&quot;Trying to get again the traps JSON&quot;</param>
                        </action>
                        <action id="1" name="Request project file" sid="713218814779843" type="AJAX">
                            <param id="0" name="Tag">&quot;mons.json&quot;</param>
                            <param id="1" name="File">mons.json</param>
                        </action>
                    </actions>
                </event-block>
                <event-block disabled="1" sid="532419638753226">
                    <conditions>
                        <condition id="0" name="On completed" sid="322087223870364" type="AJAX">
                            <param id="0" name="Tag">&quot;mons.json&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="60" name="LoadJSON" sid="429544765197060" type="3monsJSON">
                            <param id="0" name="JSON">AJAX.LastData</param>
                            <param id="1" name="Reference point">0</param>
                            <param id="2" name="Key {n}"></param>
                        </action>
                        <action id="0" name="Call function" sid="415176917777710" type="Function">
                            <param id="0" name="Name">&quot;dex .initiateDex&quot;</param>
                            <param id="1" name="Parameter {n}"></param>
                        </action>
                        <action id="-13" name="Set boolean" sid="158731153682540" type="3monsJSON">
                            <param id="0" name="Instance variable">fullyLoaded</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <event-block disabled="1" sid="895380455501266">
                    <conditions>
                        <condition id="1" name="On error" sid="296132172079394" type="AJAX">
                            <param id="0" name="Tag">&quot;mons.json&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="14" name="Log" sid="201952118280992" type="Browser">
                            <param id="0" name="Type">1</param>
                            <param id="1" name="Message">&quot;Tried to retrieve mons.json but couldn&apos;t. Probably because internet connection is missing. Will try again later.&quot;</param>
                        </action>
                    </actions>
                </event-block>
                <event-block sid="411431548521860">
                    <conditions>
                        <condition id="200" name="On JSON Parse Error" sid="444676574145155" type="3monsJSON" />
                    </conditions>
                    <actions>
                        <action id="14" name="Log" sid="732927643711785" type="Browser">
                            <param id="0" name="Type">1</param>
                            <param id="1" name="Message">&quot;The mons.json is not formated properly.&quot;</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="" sid="774611380578229" title="mons function">
            <sub-events>
                <event-block sid="315454221851938">
                    <conditions>
                        <condition id="0" name="On function" sid="235934790610036" type="Function">
                            <param id="0" name="Name">&quot;mons .count&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action disabled="1" id="14" name="Log" sid="836291135775936" type="Browser">
                            <param id="0" name="Type">0</param>
                            <param id="1" name="Message">&quot;function mons.count&quot;</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block sid="430065322211689">
                            <conditions>
                                <condition id="-8" name="Is boolean instance variable set" sid="526568336719465" type="3monsJSON">
                                    <param id="0" name="Instance variable">fullyLoaded</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block sid="533939913719822">
                                    <conditions>
                                        <condition id="60" inverted="1" name="Is undefined" sid="451399704360793" type="3monsJSON">
                                            <param id="0" name="Reference point">0</param>
                                            <param id="1" name="Key {n}">&quot;mons&quot;</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="1" name="Set return value" sid="325371965940684" type="Function">
                                            <param id="0" name="Value">3monsJSON.Size(0, &quot;mons&quot;)</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block sid="855572368963479">
                                    <conditions>
                                        <condition id="-22" name="Else" sid="356422034945130" type="System" />
                                    </conditions>
                                    <actions>
                                        <action id="14" name="Log" sid="380722483072694" type="Browser">
                                            <param id="0" name="Type">1</param>
                                            <param id="1" name="Message">&quot;Error from mons.count: The JSON don&apos;t contain a mons node.&quot;</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block sid="269409198504132">
                            <conditions>
                                <condition id="-22" name="Else" sid="889932534275644" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="462047393365487" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Error from mons.count: Trying to access the JSON which is not yet loaded.&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="779863278442747">
                    <conditions>
                        <condition id="0" name="On function" sid="499023167042027" type="Function">
                            <param id="0" name="Name">&quot;mons .name&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action disabled="1" id="14" name="Log" sid="729023759744322" type="Browser">
                            <param id="0" name="Type">0</param>
                            <param id="1" name="Message">&quot;function mons.name&quot;</param>
                        </action>
                    </actions>
                    <sub-events>
                        <variable constant="0" name="id" sid="287982594440250" static="0" type="number">0</variable>
                        <event-block sid="818852288899814">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="161675725810889" type="System">
                                    <param id="0" name="Variable">id</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="497438105464808">
                            <conditions>
                                <condition id="-8" name="Is boolean instance variable set" sid="431226848132906" type="3monsJSON">
                                    <param id="0" name="Instance variable">fullyLoaded</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block sid="450514119913050">
                                    <conditions>
                                        <condition id="-14" name="Compare variable" sid="911551505605742" type="System">
                                            <param id="0" name="Variable">id</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Value">0</param>
                                        </condition>
                                        <condition id="-14" name="Compare variable" sid="616802122346196" type="System">
                                            <param id="0" name="Variable">id</param>
                                            <param id="1" name="Comparison">2</param>
                                            <param id="2" name="Value">Function.Call(&quot;mons .count&quot;)</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="1" name="Set return value" sid="917095018715515" type="Function">
                                            <param id="0" name="Value">3monsJSON.Value(0, &quot;mons&quot;, id, &quot;name&quot;)</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block sid="887249519324757">
                                    <conditions>
                                        <condition id="-22" name="Else" sid="732068283582448" type="System" />
                                    </conditions>
                                    <actions>
                                        <action id="14" name="Log" sid="640413592966986" type="Browser">
                                            <param id="0" name="Type">1</param>
                                            <param id="1" name="Message">&quot;Error from mons.name: Trying to access out of range: &quot; &amp; id</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block sid="756051000794876">
                            <conditions>
                                <condition id="-22" name="Else" sid="739122741629200" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="652811099888395" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Error from mons.name: Trying to access the JSON which is not yet loaded.&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="128775819446817">
                    <conditions>
                        <condition id="0" name="On function" sid="527917691628465" type="Function">
                            <param id="0" name="Name">&quot;mons .duration&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action disabled="1" id="14" name="Log" sid="155720174116154" type="Browser">
                            <param id="0" name="Type">0</param>
                            <param id="1" name="Message">&quot;function mons.duration&quot;</param>
                        </action>
                    </actions>
                    <sub-events>
                        <variable constant="0" name="id" sid="995771008687952" static="0" type="number">0</variable>
                        <event-block sid="642920890496521">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="858035320381720" type="System">
                                    <param id="0" name="Variable">id</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="919539272537151">
                            <conditions>
                                <condition id="-14" name="Compare variable" sid="328232417797392" type="System">
                                    <param id="0" name="Variable">id</param>
                                    <param id="1" name="Comparison">5</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="1" name="Set return value" sid="758326794617948" type="Function">
                                    <param id="0" name="Value">3monsJSON.Value(0, &quot;mons&quot;, id, &quot;duration&quot;)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="997482772190112">
                            <conditions>
                                <condition id="-22" name="Else" sid="158941075406765" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="490196580532365" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Error from mons.duration: Trying to access &lt;0&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="429947112066477">
                    <conditions>
                        <condition id="0" name="On function" sid="743336900586332" type="Function">
                            <param id="0" name="Name">&quot;mons .gift&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action disabled="1" id="14" name="Log" sid="808122527527103" type="Browser">
                            <param id="0" name="Type">0</param>
                            <param id="1" name="Message">&quot;function mons.gift&quot;</param>
                        </action>
                    </actions>
                    <sub-events>
                        <variable constant="0" name="id" sid="805602171810369" static="0" type="number">0</variable>
                        <event-block sid="522927953526963">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="865155223192797" type="System">
                                    <param id="0" name="Variable">id</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="200104175665877">
                            <conditions>
                                <condition id="-14" name="Compare variable" sid="510150766935951" type="System">
                                    <param id="0" name="Variable">id</param>
                                    <param id="1" name="Comparison">5</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="1" name="Set return value" sid="622211621055718" type="Function">
                                    <param id="0" name="Value">3monsJSON.Value(0, &quot;mons&quot;, id, &quot;gift&quot;)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="259419682100228">
                            <conditions>
                                <condition id="-22" name="Else" sid="356589400764673" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="803572716115064" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Error from mons.gift: Trying to access &lt;0&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="327308546033964">
                    <conditions>
                        <condition id="0" name="On function" sid="671801259940799" type="Function">
                            <param id="0" name="Name">&quot;mons .captureProbability&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable constant="0" name="id" sid="238146263140171" static="0" type="number">0</variable>
                        <event-block sid="647823198567455">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="177039659052300" type="System">
                                    <param id="0" name="Variable">id</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="260195685171206">
                            <conditions>
                                <condition id="-14" name="Compare variable" sid="579737572159374" type="System">
                                    <param id="0" name="Variable">id</param>
                                    <param id="1" name="Comparison">5</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="1" name="Set return value" sid="367589441655617" type="Function">
                                    <param id="0" name="Value">3monsJSON.Value(0, &quot;mons&quot;, id, &quot;captureProbability&quot;)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="923812375491615">
                            <conditions>
                                <condition id="-22" name="Else" sid="343386985917062" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="734083805092630" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Error from mons.captureProbability: Trying to access &lt;0&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="" sid="350458092138267" title="shop functions">
            <sub-events>
                <event-block sid="595926452503371">
                    <conditions>
                        <condition id="0" name="On function" sid="332195353827654" type="Function">
                            <param id="0" name="Name">&quot;shop .baitCount&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <comment>Returns the number of baits</comment>
                        <variable comment="the index of the bait in the json" constant="0" name="baitIndex" sid="131338431457707" static="0" type="number">-1</variable>
                        <event-block sid="742359007273462">
                            <conditions>
                                <condition id="-8" name="Is boolean instance variable set" sid="839687478890578" type="3monsJSON">
                                    <param id="0" name="Instance variable">fullyLoaded</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block sid="113815902654508">
                                    <conditions>
                                        <condition id="60" inverted="1" name="Is undefined" sid="639170730672225" type="3monsJSON">
                                            <param id="0" name="Reference point">0</param>
                                            <param id="1" name="Key {n}">&quot;bait&quot;</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="1" name="Set return value" sid="680026643842119" type="Function">
                                            <param id="0" name="Value">3monsJSON.Size(0, &quot;bait&quot;)</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block sid="563282013753011">
                                    <conditions>
                                        <condition id="-22" name="Else" sid="999413779338982" type="System" />
                                    </conditions>
                                    <actions>
                                        <action id="14" name="Log" sid="171072163088194" type="Browser">
                                            <param id="0" name="Type">1</param>
                                            <param id="1" name="Message">&quot;Trying to reach an undefined node in shop.baitCount : &quot; &amp; baitIndex</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block sid="689159381168664">
                            <conditions>
                                <condition id="-22" name="Else" sid="558946409377167" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="153282972964997" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Error from shop.baitCount: Trying to access the JSON which is not yet loaded.&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="945240023571915">
                    <conditions>
                        <condition id="0" name="On function" sid="697134036722151" type="Function">
                            <param id="0" name="Name">&quot;shop .getBaitName&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable comment="the index of the bait in the json" constant="0" name="baitIndex" sid="908954983637031" static="0" type="number">-1</variable>
                        <event-block sid="891812683096013">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="883882374845552" type="System">
                                    <param id="0" name="Variable">baitIndex</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="693783762267451">
                            <conditions>
                                <condition id="-8" name="Is boolean instance variable set" sid="271369028765466" type="3monsJSON">
                                    <param id="0" name="Instance variable">fullyLoaded</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block sid="755316875628313">
                                    <conditions>
                                        <condition id="-8" name="Compare two values" sid="187230168753838" type="System">
                                            <param id="0" name="First value">baitIndex</param>
                                            <param id="1" name="Comparison">2</param>
                                            <param id="2" name="Second value">Function.Call(&quot;shop .baitCount&quot;)</param>
                                        </condition>
                                        <condition id="-8" name="Compare two values" sid="282626275475053" type="System">
                                            <param id="0" name="First value">baitIndex</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                        <condition id="-37" inverted="1" name="Is number NaN" sid="811904246390752" type="System">
                                            <param id="0" name="Number">baitIndex</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <event-block sid="347231921817562">
                                            <conditions>
                                                <condition id="60" inverted="1" name="Is undefined" sid="797555083855894" type="3monsJSON">
                                                    <param id="0" name="Reference point">0</param>
                                                    <param id="1" name="Key {n}">&quot;bait&quot;{###}baitIndex{###}&quot;name&quot;</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="1" name="Set return value" sid="609621565379499" type="Function">
                                                    <param id="0" name="Value">3monsJSON.Value(0, &quot;bait&quot;, baitIndex, &quot;name&quot;)</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                        <event-block sid="145451611575514">
                                            <conditions>
                                                <condition id="-22" name="Else" sid="519240090520745" type="System" />
                                            </conditions>
                                            <actions>
                                                <action id="14" name="Log" sid="470309603617158" type="Browser">
                                                    <param id="0" name="Type">1</param>
                                                    <param id="1" name="Message">&quot;Trying to reach an undefined node &apos;name&apos; in shop.getBaitName : &quot; &amp; baitIndex</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                                <event-block sid="358800214907644">
                                    <conditions>
                                        <condition id="-22" name="Else" sid="265415395887570" type="System" />
                                    </conditions>
                                    <actions>
                                        <action id="14" name="Log" sid="382021362331245" type="Browser">
                                            <param id="0" name="Type">1</param>
                                            <param id="1" name="Message">&quot;Trying to reach outside of the list of baits in shop.getBaitName : &quot; &amp; baitIndex</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block sid="136216049410585">
                            <conditions>
                                <condition id="-22" name="Else" sid="146028568810970" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="990271927870041" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Error from shop.getBaitName: Trying to access the JSON which is not yet loaded.&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="756637415931428">
                    <conditions>
                        <condition id="0" name="On function" sid="318947028276299" type="Function">
                            <param id="0" name="Name">&quot;shop .getBaitCost&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable constant="0" name="baitIndex" sid="333297904402748" static="0" type="number">-1</variable>
                        <event-block sid="178326497146000">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="413344868412810" type="System">
                                    <param id="0" name="Variable">baitIndex</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="250127952228935">
                            <conditions>
                                <condition id="60" inverted="1" name="Is undefined" sid="278937800732929" type="3monsJSON">
                                    <param id="0" name="Reference point">0</param>
                                    <param id="1" name="Key {n}">&quot;bait&quot;{###}baitIndex{###}&quot;cost&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="1" name="Set return value" sid="258361036139218" type="Function">
                                    <param id="0" name="Value">3monsJSON.Value(0, &quot;bait&quot;, baitIndex, &quot;cost&quot;)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="361256752317416">
                            <conditions>
                                <condition id="-22" name="Else" sid="311185151942910" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="732108900357982" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Trying to reach an undefined node in shop .getBaitCost : &quot; &amp; baitIndex</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="536719245758514">
                    <conditions>
                        <condition id="0" name="On function" sid="921191982680091" type="Function">
                            <param id="0" name="Name">&quot;shop .getBaitDuration&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable constant="0" name="baitIndex" sid="618721412565846" static="0" type="number">-1</variable>
                        <event-block sid="905135823975571">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="902145566599362" type="System">
                                    <param id="0" name="Variable">baitIndex</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="987379135325142">
                            <conditions>
                                <condition id="60" inverted="1" name="Is undefined" sid="839946242329458" type="3monsJSON">
                                    <param id="0" name="Reference point">0</param>
                                    <param id="1" name="Key {n}">&quot;bait&quot;{###}baitIndex{###}&quot;duration&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="1" name="Set return value" sid="292633019210034" type="Function">
                                    <param id="0" name="Value">3monsJSON.Value(0, &quot;bait&quot;, baitIndex, &quot;duration&quot;)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="186550680670614">
                            <conditions>
                                <condition id="-22" name="Else" sid="973639387253777" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="148680063753680" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Trying to reach an undefined node in shop .getBaitDuration : &quot; &amp; baitIndex</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="" sid="611506170582945" title="regions functions">
            <sub-events>
                <event-block sid="819971137136416">
                    <conditions>
                        <condition id="0" name="On function" sid="725055740222817" type="Function">
                            <param id="0" name="Name">&quot;regions .count&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <comment>returns the number of regions</comment>
                        <event-block sid="728207444832026">
                            <conditions />
                            <actions />
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="200144588740968">
                    <conditions>
                        <condition id="0" name="On function" sid="959517925714017" type="Function">
                            <param id="0" name="Name">&quot;regions .getName&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <comment>1 parameter: index of the region (nb)</comment>
                        <comment>returns the name of a region</comment>
                        <event-block sid="145287347847004">
                            <conditions />
                            <actions />
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="713406024235763">
                    <conditions>
                        <condition id="0" name="On function" sid="536855367109518" type="Function">
                            <param id="0" name="Name">&quot;regions .getProbability&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <comment>2 parameters: &#x0D;&#x0A;1) index of the region (nb)&#x0D;&#x0A;2) name of the rarity (string)</comment>
                        <comment>returns the name of a region</comment>
                        <event-block sid="356417345817462">
                            <conditions />
                            <actions />
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="592422745240659">
                    <conditions>
                        <condition id="0" name="On function" sid="141755682439534" type="Function">
                            <param id="0" name="Name">&quot;regions .countForRarity&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <comment>2 parameters: &#x0D;&#x0A;1) index of the region (nb)&#x0D;&#x0A;2) name of the rarity (string)</comment>
                        <comment>returns the number of mons for that rarity in that region</comment>
                        <event-block sid="517783958531064">
                            <conditions />
                            <actions />
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="" sid="745819940776691" title="debug (mons.json)">
            <sub-events>
                <event-block sid="830324351519742">
                    <conditions>
                        <condition id="-18" name="Is in preview" sid="626982103027155" type="System" />
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block sid="729570135923569">
                            <conditions>
                                <condition id="-6" name="Every X seconds" sid="199670017431012" type="System">
                                    <param id="0" name="Interval (seconds)">1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="14" name="Log" sid="579306133422179" type="Browser">
                                    <param id="0" name="Type">0</param>
                                    <param id="1" name="Message">&quot;before: &quot; &amp; Function.Call(&quot;dex .isMet&quot;, 1)</param>
                                </action>
                                <action disabled="1" id="0" name="Call function" sid="651796085968194" type="Function">
                                    <param id="0" name="Name">&quot;dex .addMet&quot;</param>
                                    <param id="1" name="Parameter {n}">1</param>
                                </action>
                                <action disabled="1" id="14" name="Log" sid="982808968182699" type="Browser">
                                    <param id="0" name="Type">0</param>
                                    <param id="1" name="Message">&quot;before: &quot; &amp; Function.Call(&quot;dex .isMet&quot;, 1)</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
    </events>
</c2eventsheet>
