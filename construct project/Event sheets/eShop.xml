<?xml version="1.0" encoding="utf-8" ?>
<c2eventsheet>
    <!--All the 'name' attributes are ignored by Construct 2 - they are there for readability only.-->
    <name>eShop</name>
    <events>
        <include>generic buttons</include>
        <include>eCurrency</include>
        <include>eInventory</include>
        <include>eGameplay stuff</include>
        <include>eMons general</include>
        <event-block sid="960171520747524">
            <conditions>
                <condition id="0" name="On function" sid="351240196434483" type="Function">
                    <param id="0" name="Name">&quot;first launch&quot;</param>
                </condition>
            </conditions>
            <actions />
        </event-block>
        <event-block sid="328831459610543">
            <conditions>
                <condition id="0" name="On function" sid="328587513102248" type="Function">
                    <param id="0" name="Name">&quot;time has passed&quot;</param>
                </condition>
            </conditions>
            <actions />
        </event-block>
        <event-group description="" sid="440145928237922" title="JSON functions">
            <sub-events>
                <event-block sid="875678573268699">
                    <conditions>
                        <condition id="0" name="On function" sid="523590260312283" type="Function">
                            <param id="0" name="Name">&quot;shop .getBaitName&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable constant="0" name="i" sid="232839569268453" static="0" type="number">-1</variable>
                        <event-block sid="550051811230764">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="466444691320383" type="System">
                                    <param id="0" name="Variable">i</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="207037255082212">
                            <conditions>
                                <condition id="60" inverted="1" name="Is undefined" sid="530987032102507" type="3trapsJSON">
                                    <param id="0" name="Reference point">0</param>
                                    <param id="1" name="Key {n}">&quot;bait&quot;{###}i{###}&quot;name&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="1" name="Set return value" sid="756985188223399" type="Function">
                                    <param id="0" name="Value">3trapsJSON.Value(0, &quot;bait&quot;, i, &quot;name&quot;)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="957647636189246">
                            <conditions>
                                <condition id="-22" name="Else" sid="355768578093182" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="802890252627448" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Trying to reach an undefined node in shop .getBaitName : &quot; &amp; i</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="105626164097389">
                    <conditions>
                        <condition id="0" name="On function" sid="312484788009891" type="Function">
                            <param id="0" name="Name">&quot;shop .getBaitCost&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable constant="0" name="i" sid="785427278079773" static="0" type="number">-1</variable>
                        <event-block sid="319030688054827">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="102032421189495" type="System">
                                    <param id="0" name="Variable">i</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="137702438086916">
                            <conditions>
                                <condition id="60" inverted="1" name="Is undefined" sid="877474038284682" type="3trapsJSON">
                                    <param id="0" name="Reference point">0</param>
                                    <param id="1" name="Key {n}">&quot;bait&quot;{###}i{###}&quot;cost&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="1" name="Set return value" sid="694862850578751" type="Function">
                                    <param id="0" name="Value">3trapsJSON.Value(0, &quot;bait&quot;, i, &quot;cost&quot;)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="432688923576096">
                            <conditions>
                                <condition id="-22" name="Else" sid="285710007728193" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="880993688800138" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Trying to reach an undefined node in shop .getBaitCost : &quot; &amp; i</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block sid="147882626678597">
                    <conditions>
                        <condition id="0" name="On function" sid="105210763986311" type="Function">
                            <param id="0" name="Name">&quot;shop .getBaitDuration&quot;</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable constant="0" name="i" sid="378827895293308" static="0" type="number">-1</variable>
                        <event-block sid="296011925110104">
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" sid="805537380257668" type="System">
                                    <param id="0" name="Variable">i</param>
                                    <param id="1" name="Value">Function.Param(0)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="156358485538400">
                            <conditions>
                                <condition id="60" inverted="1" name="Is undefined" sid="902751751854691" type="3trapsJSON">
                                    <param id="0" name="Reference point">0</param>
                                    <param id="1" name="Key {n}">&quot;bait&quot;{###}i{###}&quot;duration&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="1" name="Set return value" sid="251420733685480" type="Function">
                                    <param id="0" name="Value">3trapsJSON.Value(0, &quot;bait&quot;, i, &quot;duration&quot;)</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="401338603399877">
                            <conditions>
                                <condition id="-22" name="Else" sid="537334598600844" type="System" />
                            </conditions>
                            <actions>
                                <action id="14" name="Log" sid="468515196174034" type="Browser">
                                    <param id="0" name="Type">1</param>
                                    <param id="1" name="Message">&quot;Trying to reach an undefined node in shop .getBaitDuration : &quot; &amp; i</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="" sid="137895606791883" title="debug (Shop)">
            <sub-events>
                <event-block sid="626479786591933">
                    <conditions>
                        <condition id="-18" name="Is in preview" sid="395682766318617" type="System" />
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block disabled="1" sid="666320355980308">
                            <conditions>
                                <condition id="-6" name="Every X seconds" sid="861383706522647" type="System">
                                    <param id="0" name="Interval (seconds)">1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="0" name="Call function" sid="314355139125320" type="Function">
                                    <param id="0" name="Name">&quot;shop .getBaitDuration&quot;</param>
                                    <param id="1" name="Parameter {n}">1</param>
                                </action>
                                <action id="14" name="Log" sid="595121416930735" type="Browser">
                                    <param id="0" name="Type">0</param>
                                    <param id="1" name="Message">Function.ReturnValue</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-block sid="222277889096581">
            <conditions>
                <condition id="0" name="On function" sid="234192189818989" type="Function">
                    <param id="0" name="Name">&quot;shop .buttonClicked&quot;</param>
                </condition>
            </conditions>
            <actions />
            <sub-events>
                <variable constant="0" name="id" sid="802388869514627" static="0" type="number">-1</variable>
                <event-block sid="802122143090378">
                    <conditions />
                    <actions>
                        <action id="-9" name="Set value" sid="510229099572723" type="System">
                            <param id="0" name="Variable">id</param>
                            <param id="1" name="Value">Function.Param(0)</param>
                        </action>
                    </actions>
                </event-block>
                <variable constant="0" name="baitName" sid="809083349227577" static="0" type="text"></variable>
                <variable constant="0" name="cost" sid="600794204058114" static="0" type="number">-1</variable>
                <variable constant="0" name="duration" sid="475377794106858" static="0" type="number">-1</variable>
                <comment>for now, it&apos;s always soft</comment>
                <variable constant="0" name="currency" sid="813003499925411" static="0" type="text">soft</variable>
                <event-block sid="840155477642861">
                    <conditions />
                    <actions>
                        <action id="-9" name="Set value" sid="450530394541732" type="System">
                            <param id="0" name="Variable">baitName</param>
                            <param id="1" name="Value">Function.Call(&quot;shop .getBaitName&quot;, id)</param>
                        </action>
                        <action id="-9" name="Set value" sid="923359861915120" type="System">
                            <param id="0" name="Variable">cost</param>
                            <param id="1" name="Value">Function.Call(&quot;shop .getBaitCost&quot;, id)</param>
                        </action>
                        <action id="-9" name="Set value" sid="734301235322396" type="System">
                            <param id="0" name="Variable">duration</param>
                            <param id="1" name="Value">Function.Call(&quot;shop .getBaitDuration&quot;, id)</param>
                        </action>
                    </actions>
                </event-block>
                <event-block sid="673027644120804">
                    <conditions>
                        <condition id="-8" name="Compare two values" sid="238923182396601" type="System">
                            <param id="0" name="First value">Function.Call(&quot;inventory .hasEnough&quot;, &quot;soft&quot;, cost)</param>
                            <param id="1" name="Comparison">0</param>
                            <param id="2" name="Second value">&quot;true&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Call function" sid="813176703386985" type="Function">
                            <param id="0" name="Name">&quot;inventory .spend&quot;</param>
                            <param id="1" name="Parameter {n}">currency{###}cost</param>
                        </action>
                        <action id="0" name="Call function" sid="125658614109201" type="Function">
                            <param id="0" name="Name">&quot;inventory .receive&quot;</param>
                            <param id="1" name="Parameter {n}">baitName{###}1</param>
                        </action>
                    </actions>
                </event-block>
                <event-block sid="989410145716826">
                    <conditions />
                    <actions>
                        <action id="0" name="Call function" sid="801358648386537" type="Function">
                            <param id="0" name="Name">&quot;shop .updateUI&quot;</param>
                            <param id="1" name="Parameter {n}"></param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-block>
        <event-block sid="255110207285770">
            <conditions>
                <condition id="0" name="On function" sid="672653012263272" type="Function">
                    <param id="0" name="Name">&quot;shop .updateUI&quot;</param>
                </condition>
            </conditions>
            <actions />
            <sub-events>
                <variable constant="0" name="id" sid="126767341187973" static="0" type="number">0</variable>
                <variable constant="0" name="cost" sid="565094612486525" static="0" type="number">0</variable>
                <event-block sid="930647180402407">
                    <conditions>
                        <condition id="-11" name="For Each" sid="785205309497885" type="System">
                            <param id="0" name="Object">shopBtn</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Set value" sid="548007335340214" type="System">
                            <param id="0" name="Variable">id</param>
                            <param id="1" name="Value">shopBtn.callbackParamNb</param>
                        </action>
                        <action id="-9" name="Set value" sid="398465744387214" type="System">
                            <param id="0" name="Variable">cost</param>
                            <param id="1" name="Value">function.Call(&quot;shop .getBaitCost&quot;, id)</param>
                        </action>
                        <action disabled="1" id="14" name="Log" sid="863453559683394" type="Browser">
                            <param id="0" name="Type">0</param>
                            <param id="1" name="Message">&quot;id: &quot; &amp; id</param>
                        </action>
                        <action disabled="1" id="14" name="Log" sid="799318527483422" type="Browser">
                            <param id="0" name="Type">0</param>
                            <param id="1" name="Message">&quot;cost: &quot; &amp; cost</param>
                        </action>
                        <action disabled="1" id="14" name="Log" sid="657993585641179" type="Browser">
                            <param id="0" name="Type">0</param>
                            <param id="1" name="Message">&quot;hasEnough: &quot; &amp; function.Call(&quot;inventory .hasEnough&quot;, &quot;soft&quot;, cost)</param>
                        </action>
                        <action disabled="1" id="14" name="Log" sid="464355293879382" type="Browser">
                            <param id="0" name="Type">0</param>
                            <param id="1" name="Message">&quot;has: &quot; &amp; Function.Call(&quot;inventory .getQuantity&quot;, &quot;soft&quot;)</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block sid="385578176551202">
                            <conditions>
                                <condition id="-7" name="Compare instance variable" sid="716355537485538" type="shopBtnLabel">
                                    <param id="0" name="Instance variable">buttonID</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">shopBtn.buttonId</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-10" name="Set value" sid="528933327709792" type="shopBtnLabel">
                                    <param id="0" name="Instance variable">theText</param>
                                    <param id="1" name="Value">&quot;Bait: &quot; &amp; Function.Call(&quot;shop .getBaitName&quot;, id) &amp; newline &amp; &quot;Cost: &quot; &amp; cost</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="489014399368565">
                            <conditions>
                                <condition id="-8" name="Compare two values" sid="812364255468044" type="System">
                                    <param id="0" name="First value">function.Call(&quot;inventory .hasEnough&quot;, &quot;soft&quot;, cost)</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Second value">&quot;false&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-10" name="Set value" sid="700019472393898" type="shopBtn">
                                    <param id="0" name="Instance variable">state</param>
                                    <param id="1" name="Value">&quot;disabled&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="161464630353916">
                            <conditions>
                                <condition id="-22" name="Else" sid="571153971329852" type="System" />
                            </conditions>
                            <actions>
                                <action id="-10" name="Set value" sid="309361551072447" type="shopBtn">
                                    <param id="0" name="Instance variable">state</param>
                                    <param id="1" name="Value">&quot;normal&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-block>
        <event-block any="1" sid="365079765971194">
            <conditions>
                <condition id="-2" name="On start of layout" sid="199647627280433" type="System" />
                <condition id="-6" name="Every X seconds" sid="381813424977174" type="System">
                    <param id="0" name="Interval (seconds)">1</param>
                </condition>
            </conditions>
            <actions>
                <action id="-16" name="Wait" sid="805922947684463" type="System">
                    <param id="0" name="Seconds">0.1</param>
                </action>
                <action id="0" name="Call function" sid="244350942431148" type="Function">
                    <param id="0" name="Name">&quot;shop .updateUI&quot;</param>
                    <param id="1" name="Parameter {n}"></param>
                </action>
            </actions>
        </event-block>
    </events>
</c2eventsheet>
